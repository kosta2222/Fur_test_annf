#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
console.toolbox = [{'autosave': False,
                    'id': 'cmd-s6bsTV5n38U8GrS8',
                    'io_encoding': None,
                    'key_binding': None,
                    'line_mode': True,
                    'loc': u'b:\\msys64\\home\\msys_u\\code\\python\\Fur_test_Ann2\\app.py',
                    'pseudo_tty': False,
                    'raise_panel': True,
                    'shared': False,
                    'title': None},
                   {'autosave': False,
                    'id': 'cmd-HzfMcRO1SPOa421g',
                    'io_encoding': None,
                    'key_binding': None,
                    'line_mode': True,
                    'loc': u'b:\\msys64\\home\\msys_u\\code\\python\\Fur_test_Ann2_annf\\app.py',
                    'pseudo_tty': False,
                    'raise_panel': True,
                    'shared': False,
                    'title': None},
                   {'autosave': False,
                    'id': 'cmd-uLqrccNhGhL3eeIX',
                    'io_encoding': None,
                    'key_binding': None,
                    'line_mode': True,
                    'loc': u'b:\\msys64\\home\\msys_u\\code\\python\\Fur_test_annf\\app.py',
                    'pseudo_tty': False,
                    'raise_panel': True,
                    'shared': False,
                    'title': None}]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
[user attributes]
edit.file-encoding = {loc('Lay.py'): 'utf_8',
                      loc('fit.py'): 'utf_8',
                      loc('learn.py'): 'utf_8',
                      loc('util.py'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'lIsyA6t13ywVL01lOhbOb7Q6uC'\
        'dhpgX9',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25495958853783984,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(6,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../brainy/examples/brainy/NN_params.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../brainy/examples/brainy/NN_params.py'),
                             'NN_params')]],
        'top-node': [('class def',
                      loc('../brainy/examples/brainy/NN_params.py'),
                      'NN_params')]},
        loc('../brainy/examples/brainy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../brainy/examples/brainy/cross_val_eval.py'),
                      '')]},
        loc('../brainy/examples/brainy/fit.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../brainy/examples/brainy/fit.py'),
                      'fit')]},
        loc('../brainy/examples/brainy/learn.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../brainy/examples/brainy/learn.py'),
                             'make_hidden')]],
        'top-node': [('function def',
                      loc('../brainy/examples/brainy/learn.py'),
                      'answer_nn_direct')]},
        loc('../brainy/examples/brainy/nn_constants.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../brainy/examples/brainy/nn_constants.py'),
                             'with_bias')]],
        'top-node': [('generic attribute',
                      loc('../brainy/examples/brainy/nn_constants.py'),
                      'bc_bufLen')]},
        loc('../brainy/examples/brainy/serial_deserial.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [[('function def',
                             loc('../brainy/examples/brainy/serial_deserial.py'),
                             'to_file')]],
        'top-node': [('function def',
                      loc('../brainy/examples/brainy/serial_deserial.py'),
                      'deserialization')]},
        loc('../brainy/examples/log_cons.log'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../brainy/examples/shell_code.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../brainy/examples/shell_code.py'),
                             'create_nn_params')]],
        'top-node': [('function def',
                      loc('../brainy/examples/shell_code.py'),
                      'create_nn_params')]},
        u'All Classes': {'expanded-nodes': [],
                         'selected-nodes': [None],
                         'top-node': None}},
                                'browse_mode': u'All Classes',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.3977455716586151,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 155L,
                       'selection_end': 155L,
                       'selection_start': 155L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': 'cmd-uLqrccNhGhL3eeIX'})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('learn.py'),
        {'attrib-starts': [('cr_lay|0|',
                            193)],
         'code-line': '                 nn_params.net[nn_params.sp_d].matrix'\
                      '[row][elem] =i\n',
         'first-line': 195L,
         'folded-linenos': [],
         'sel-line': 203L,
         'sel-line-start': 9268L,
         'selection_end': 9335L,
         'selection_start': 9335L,
         'zoom': 0L},
        1597125216.614],
        [loc('app.py'),
         {'attrib-starts': [],
          'code-line': "i=cr_lay(nn_params, 'F', 2, 1, RELU)\r\n",
          'first-line': 258L,
          'folded-linenos': [],
          'sel-line': 263L,
          'sel-line-start': 8445L,
          'selection_end': 8480L,
          'selection_start': 8480L,
          'zoom': 0L},
         1597125310.891],
        [loc('learn.py'),
         {'attrib-starts': [('cr_lay|0|',
                             193)],
          'code-line': '                 nn_params.net[nn_params.sp_d].matri'\
                       'x[row][elem] =i\n',
          'first-line': 195L,
          'folded-linenos': [],
          'sel-line': 203L,
          'sel-line-start': 9268L,
          'selection_end': 9335L,
          'selection_start': 9335L,
          'zoom': 0L},
         1597125316.351],
        [loc('app.py'),
         {'attrib-starts': [],
          'code-line': "loger, date=get_logger(\"debug\", 'log_.log', __name"\
                       "__)\r\n",
          'first-line': 258L,
          'folded-linenos': [],
          'sel-line': 262L,
          'sel-line-start': 8386L,
          'selection_end': 8438L,
          'selection_start': 8438L,
          'zoom': 0L},
         1597125365.162],
        [loc('learn.py'),
         {'attrib-starts': [('cr_lay|0|',
                             193)],
          'code-line': '                 nn_params.net[nn_params.sp_d].matri'\
                       'x[row][elem] =i\n',
          'first-line': 150L,
          'folded-linenos': [],
          'sel-line': 203L,
          'sel-line-start': 9268L,
          'selection_end': 9335L,
          'selection_start': 9335L,
          'zoom': 0L},
         1597125378.705],
        [loc('app.py'),
         {'attrib-starts': [],
          'code-line': "loger, date=get_logger(\"debug\", 'log_.log', __name"\
                       "__)\r\n",
          'first-line': 258L,
          'folded-linenos': [],
          'sel-line': 262L,
          'sel-line-start': 8386L,
          'selection_end': 8438L,
          'selection_start': 8438L,
          'zoom': 0L},
         1597125386.898],
        [loc('learn.py'),
         {'attrib-starts': [('cr_lay|0|',
                             193)],
          'code-line': '                 nn_params.net[nn_params.sp_d].matri'\
                       'x[row][elem] =i\n',
          'first-line': 195L,
          'folded-linenos': [],
          'sel-line': 203L,
          'sel-line-start': 9268L,
          'selection_end': 9335L,
          'selection_start': 9335L,
          'zoom': 0L},
         1597125408.11],
        [loc('app.py'),
         {'attrib-starts': [],
          'code-line': "i=cr_lay(nn_params, 'F', 3, 1, TAN)\r\n",
          'first-line': 258L,
          'folded-linenos': [],
          'sel-line': 264L,
          'sel-line-start': 8478L,
          'selection_end': 8512L,
          'selection_start': 8512L,
          'zoom': 0L},
         1597125579.483],
        [loc('learn.py'),
         {'attrib-starts': [('cr_lay|0|',
                             193)],
          'code-line': '                 nn_params.net[nn_params.sp_d].matri'\
                       'x[row][elem] =1/i\n',
          'first-line': 195L,
          'folded-linenos': [],
          'sel-line': 203L,
          'sel-line-start': 9268L,
          'selection_end': 9336L,
          'selection_start': 9336L,
          'zoom': 0L},
         1597125704.676],
        [loc('app.py'),
         {'attrib-starts': [],
          'code-line': 'feed_learn(nn_params, X_and_or_xor, Y_xor, 1000, 0.0'\
                       '1, True, 100, 0.01, loger, date) \r\n',
          'first-line': 267L,
          'folded-linenos': [],
          'sel-line': 272L,
          'sel-line-start': 8809L,
          'selection_end': 8848L,
          'selection_start': 8848L,
          'zoom': 0L},
         1597125823.959],
        [loc('learn.py'),
         {'attrib-starts': [('cr_lay|0|',
                             193)],
          'code-line': '                 nn_params.net[nn_params.sp_d].matri'\
                       'x[row][elem] =np.random.randn() * 1/i\n',
          'first-line': 195L,
          'folded-linenos': [],
          'sel-line': 203L,
          'sel-line-start': 9268L,
          'selection_end': 9353L,
          'selection_start': 9353L,
          'zoom': 0L},
         1597125857.904],
        [loc('app.py'),
         {'attrib-starts': [],
          'code-line': 'feed_learn(nn_params, X_and_or_xor, Y_xor, 1000, 0.0'\
                       '1, True, 100, 0.01, loger, date) \r\n',
          'first-line': 219L,
          'folded-linenos': [],
          'sel-line': 272L,
          'sel-line-start': 8809L,
          'selection_end': 8848L,
          'selection_start': 8848L,
          'zoom': 0L},
         1597125929.019],
        [loc('learn.py'),
         {'attrib-starts': [('cr_lay|0|',
                             193)],
          'code-line': '                 nn_params.net[nn_params.sp_d].matri'\
                       'x[row][elem] =np.random.randn() * 1/i\n',
          'first-line': 195L,
          'folded-linenos': [],
          'sel-line': 203L,
          'sel-line-start': 9268L,
          'selection_end': 9353L,
          'selection_start': 9353L,
          'zoom': 0L},
         1597125933.279],
        [loc('app.py'),
         {'attrib-starts': [],
          'code-line': 'feed_learn(nn_params, X_and_or_xor, Y_or, 1000, 0.01'\
                       ', True, 100, 0.01, loger, date) \r\n',
          'first-line': 270L,
          'folded-linenos': [],
          'sel-line': 272L,
          'sel-line-start': 8809L,
          'selection_end': 8847L,
          'selection_start': 8847L,
          'zoom': 0L},
         1597126318.184],
        [loc('learn.py'),
         {'attrib-starts': [('cr_lay|0|',
                             193)],
          'code-line': '                 nn_params.net[nn_params.sp_d].matri'\
                       'x[row][elem] = 1/i\n',
          'first-line': 195L,
          'folded-linenos': [],
          'sel-line': 203L,
          'sel-line-start': 9268L,
          'selection_end': 9334L,
          'selection_start': 9334L,
          'zoom': 0L},
         1597126366.35],
        [loc('unknown:untitled-1.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1597126370.113],
        [loc('learn.py'),
         {'attrib-starts': [('cr_lay|0|',
                             193)],
          'code-line': '                 nn_params.net[nn_params.sp_d].matri'\
                       'x[row][elem] = 1/i\n',
          'first-line': 195L,
          'folded-linenos': [],
          'sel-line': 203L,
          'sel-line-start': 9268L,
          'selection_end': 9334L,
          'selection_start': 9334L,
          'zoom': 0L},
         1597126370.12],
        [loc('app.py'),
         {'attrib-starts': [],
          'code-line': 'feed_learn(nn_params, X_and_or_xor, Y_or, 1000, 0.01'\
                       ', True, 100, 0.01, loger, date) \r\n',
          'first-line': 270L,
          'folded-linenos': [],
          'sel-line': 272L,
          'sel-line-start': 8809L,
          'selection_end': 8847L,
          'selection_start': 8847L,
          'zoom': 0L},
         1597126370.127],
        [loc('fit.py'),
         {'attrib-starts': [('fit|0|',
                             9)],
          'code-line': 'def fit(nn_params, epochcs, X, Y, X_eval, Y_eval, lo'\
                       'gger):\n',
          'first-line': 13L,
          'folded-linenos': [],
          'sel-line': 9L,
          'sel-line-start': 382L,
          'selection_end': 389L,
          'selection_start': 386L,
          'zoom': 0L},
         1597126370.134],
        [loc('cross_val_eval.py'),
         {'attrib-starts': [],
          'code-line': 'from learn import answer_nn_direct\n',
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1597126370.141]],
        20),
        'current-loc': loc('../brainy/examples/brainy/fit.py'),
        'editor-state-list': [(loc('../brainy/examples/brainy/fit.py'),
                               {'attrib-starts': [('fit|0|',
        67)],
                                'code-line': '        print("ep:", it)\n',
                                'first-line': 77L,
                                'folded-linenos': [],
                                'sel-line': 84L,
                                'sel-line-start': 3650L,
                                'selection_end': 3674L,
                                'selection_start': 3674L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../brainy/examples/brainy/fit.py')]),
                               'open_files': [u'../brainy/examples/brainy/fit.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.293},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           4),
                          1596921480.298),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1595620276.369),
                 'user_data': {}},
        'window-alloc': (455,
                         0,
                         455,
                         728)}]}
guimgr.recent-documents = [loc('../brainy/examples/brainy/fit.py')]
guimgr.visual-state = {loc('NN_params.py'): {'attrib-starts': [('Nn_params|0'\
        '|',
        6),
        ('Nn_params|0|.__init__|0|',
         7)],
        'code-line': '        self.lr=0.01;  # \xd0\xa0\xd1\x94\xd0\xa0\xd1'\
                     '\x95\xd0\xa1\xd0\x8c\xd0\xa1\xe2\x80\x9e\xd0\xa1\xe2\x80'\
                     '\x9e\xd0\xa0\xd1\x91\xd0\xa1\xe2\x80\xa0\xd0\xa0\xd1\x91'\
                     '\xd0\xa0\xc2\xb5\xd0\xa0\xd0\x85\xd0\xa1\xe2\x80\x9a '\
                     '\xd0\xa0\xd1\x95\xd0\xa0\xc2\xb1\xd0\xa1\xd1\x93\xd0\xa1'\
                     '\xe2\x80\xa1\xd0\xa0\xc2\xb5\xd0\xa0\xd0\x85\xd0\xa0\xd1'\
                     '\x91\xd0\xa1\xd0\x8f\n',
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 1415L,
        'selection_end': 1435L,
        'selection_start': 1435L,
        'zoom': 0L},
                       loc('app.py'): {'attrib-starts': [],
                                       'code-line': 'feed_learn(nn_params, X'\
        '_and_or_xor, Y_or, 1000, 0.01, True, 100, 0.01, loger, date) \r\n',
                                       'first-line': 270L,
                                       'folded-linenos': [],
                                       'sel-line': 272L,
                                       'sel-line-start': 8809L,
                                       'selection_end': 8847L,
                                       'selection_start': 8847L,
                                       'zoom': 0L},
                       loc('cross_val_eval.py'): {'attrib-starts': [],
        'code-line': 'from learn import answer_nn_direct\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('fit.py'): {'attrib-starts': [('fit|0|',
        9)],
                                       'code-line': 'def fit(nn_params, epoc'\
        'hcs, X, Y, X_eval, Y_eval, logger):\n',
                                       'first-line': 13L,
                                       'folded-linenos': [],
                                       'sel-line': 9L,
                                       'sel-line-start': 382L,
                                       'selection_end': 389L,
                                       'selection_start': 386L,
                                       'zoom': 0L},
                       loc('learn.py'): {'attrib-starts': [('cr_lay|0|',
        193)],
        'code-line': '                 nn_params.net[nn_params.sp_d].matrix['\
                     'row][elem] = 1/i\n',
        'first-line': 195L,
        'folded-linenos': [],
        'sel-line': 203L,
        'sel-line-start': 9268L,
        'selection_end': 9334L,
        'selection_start': 9334L,
        'zoom': 0L},
                       loc('log.txt'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('operations.py'): {'attrib-starts': [('operations'\
        '|0|',
        27)],
        'code-line': '        return math.exp(a)\n',
        'first-line': 66L,
        'folded-linenos': [],
        'sel-line': 86L,
        'sel-line-start': 2837L,
        'selection_end': 2863L,
        'selection_start': 2863L,
        'zoom': 0L},
                       loc('util.py'): {'attrib-starts': [('get_logger|0|',
        13)],
        'code-line': "def get_logger(level_,fname,module,mode='w'):\n",
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 282L,
        'selection_end': 296L,
        'selection_start': 286L,
        'zoom': 0L},
                       loc('work_with_arr.py'): {'attrib-starts': [('copy_ve'\
        'ctor|0|',
        1)],
        'code-line': '    #print("in_",src)\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 78L,
        'selection_end': 83L,
        'selection_start': 83L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'b:\\msys64\\mingw64\\bin\\A_win_python\\Python373\\python.exe')}
